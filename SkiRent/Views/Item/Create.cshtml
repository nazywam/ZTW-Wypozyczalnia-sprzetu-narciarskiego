@model SkiRent.ViewModels.Item.ItemCreateViewModel

@{
	ViewBag.Title = "title";
}

@using (Html.BeginForm())
{
	@Html.HiddenFor(model => model.Model.ID)
	@Html.HiddenFor(model => model.Model.Avaiable)
		<ul class="list-group">
			<li class="list-group-item cbg-blue text-white">
				<div class="row">
					<div class="col-md-9">
						@{
							if (Model.Model.ID != 0)
							{
								<h2>[[[Edit item]]]</h2>
							}
							else
							{
								<h2>[[[Add item]]]</h2>
							}
						}
						</div>
				</div>
			</li>
			<li class="list-group-item">
				<div class="form-group row">
					<label for="staticEmail" class="col-sm-2 col-form-label font-weight-bold">@Html.DisplayNameFor(model => model.Model.Manufacturer)</label>
					<div class="col-sm-4">
						@Html.TextBoxFor(model => model.Model.Manufacturer, new { @class = "form-control " + @Html.FieldHasError(model => model.Model.Manufacturer) })
						@Html.ValidationMessageFor(model => model.Model.Manufacturer, "", new { @class = "invalid-feedback" })
					</div>

					<label for="staticEmail" class="col-sm-2 col-form-label font-weight-bold">@Html.DisplayNameFor(model => model.Model.ModelName)</label>
					<div class="col-sm-4">
						@Html.TextBoxFor(model => model.Model.ModelName, new { @class = "form-control " + @Html.FieldHasError(model => model.Model.ModelName) })
						@Html.ValidationMessageFor(model => model.Model.ModelName, "", new { @class = "invalid-feedback" })
					</div>
				</div>
                <div class="form-group row">
                    <label for="staticEmail" class="col-sm-2 col-form-label font-weight-bold">@Html.DisplayNameFor(model => model.Model.Size)</label>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.Model.Size, new { @class = "form-control " + @Html.FieldHasError(model => model.Model.Size) })
                        @Html.ValidationMessageFor(model => model.Model.Size, "", new { @class = "invalid-feedback" })
                    </div>

                    <label for="staticEmail" class="col-sm-2 col-form-label font-weight-bold">@Html.DisplayNameFor(model => model.Model.Manufacturer)</label>
                    <div class="col-sm-4">
                        @Html.DropDownListFor(model => model.Model.CategoryID, Model.CategorySelectList,"Wybierz", new { @class = "form-control " + @Html.FieldHasError(model => model.Model.CategoryID) })
                        @Html.ValidationMessageFor(model => model.Model.CategoryID, "", new { @class = "invalid-feedback" })
                    </div>
                </div>
                <div class="form-group row">
                    <label for="staticEmail" class="col-sm-2 col-form-label font-weight-bold">@Html.DisplayNameFor(model => model.Model.Barcode)</label>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(model => model.Model.Barcode, new { @class = "form-control " + @Html.FieldHasError(model => model.Model.Barcode) })
                        @Html.ValidationMessageFor(model => model.Model.Barcode, "", new { @class = "invalid-feedback" })
                    </div>
                </div>
			</li>
			<li class="list-group-item bg-light text-white">
				<div class="row">
					<div class="col-md-9"></div>
					<div class="col-md-3  text-right">
						@Html.Partial($"~/Views/Shared/_FormCancelSave.cshtml")
					</div>
				</div>
			</li>
		</ul>

}
